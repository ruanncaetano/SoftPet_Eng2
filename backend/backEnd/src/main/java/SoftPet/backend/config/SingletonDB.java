package SoftPet.backend.config;

import java.sql.*;

public class SingletonDB
{
    private static SingletonDB instancia;
    private Connection conexao;

    private SingletonDB() {
        try {
            // Exemplo: adapte para o seu banco de dados
            Class.forName("org.postgresql.Driver"); // ou outro driver
            conexao = DriverManager.getConnection("jdbc:postgresql://localhost:5432/SoftPet", "postgres", "10131518");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static SingletonDB getConexao() {
        if (instancia == null)
            instancia = new SingletonDB();
        return instancia;
    }

    public Connection getConnection() {
        return conexao;
    }

    //Adicione este metodo
    public PreparedStatement getPreparedStatement(String sql) throws SQLException {
        return conexao.prepareStatement(sql);
    }

    //E este, se for necessÃ¡rio retornar o ID gerado:
    public PreparedStatement getPreparedStatement(String sql, int autoGeneratedKeys) throws SQLException {
        return conexao.prepareStatement(sql, autoGeneratedKeys);
    }

    public boolean manipular(String sql) {
        try (Statement stmt = conexao.createStatement()) {
            return stmt.executeUpdate(sql) > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    public ResultSet consultar(String sql) {
        try {
            Statement stmt = conexao.createStatement();
            return stmt.executeQuery(sql);
        } catch (SQLException e) {
            e.printStackTrace();
            return null;
        }
    }
}