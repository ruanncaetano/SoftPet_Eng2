-- Script SQL para PostgreSQL - Recriação das Tabelas do SoftPet
-- ATENÇÃO: ESTE SCRIPT APAGARÁ AS TABELAS EXISTENTES E SEUS DADOS!
-- FAÇA UM BACKUP ANTES DE EXECUTAR.

-- Remover tabelas na ordem inversa de dependência (aproximada)
DROP TABLE IF EXISTS VOLUNTARIO_X_DOACAO CASCADE;
DROP TABLE IF EXISTS DOACAO_X_PRODUTOS CASCADE;
DROP TABLE IF EXISTS ANIMAL_X_VAC CASCADE;
DROP TABLE IF EXISTS ANIMAL_X_MED CASCADE;
DROP TABLE IF EXISTS ADOCAO CASCADE;
DROP TABLE IF EXISTS DOACOES CASCADE;
DROP TABLE IF EXISTS VOLUNTARIO CASCADE;
DROP TABLE IF EXISTS PESSOA CASCADE;
DROP TABLE IF EXISTS ANIMAIS CASCADE;
DROP TABLE IF EXISTS MEDICAMENTO CASCADE;
DROP TABLE IF EXISTS VACINAS CASCADE;
DROP TABLE IF EXISTS CARGO CASCADE;
DROP TABLE IF EXISTS CONTATO CASCADE;
DROP TABLE IF EXISTS CREDENCIAIS CASCADE;
DROP TABLE IF EXISTS ENDERECO CASCADE;
DROP TABLE IF EXISTS PRODUTOS CASCADE;


-- Criação das Tabelas

CREATE TABLE CARGO (
    CAR_COD INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CAR_NOME VARCHAR(100)
);
COMMENT ON TABLE CARGO IS 'Tabela para armazenar os cargos dos voluntários.';
COMMENT ON COLUMN CARGO.CAR_COD IS 'Chave primária auto-incrementável para o cargo.';
COMMENT ON COLUMN CARGO.CAR_NOME IS 'Nome do cargo (ex: Veterinário, Atendente).';

CREATE TABLE CONTATO (
    CON_COD INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CON_TELEFONE VARCHAR(255), 
    CON_EMAIL VARCHAR(255)     
);
COMMENT ON TABLE CONTATO IS 'Tabela para armazenar informações de contato.';
COMMENT ON COLUMN CONTATO.CON_COD IS 'Chave primária auto-incrementável para o contato.';
COMMENT ON COLUMN CONTATO.CON_TELEFONE IS 'Número de telefone, permitindo caracteres como ( ) - +.';
COMMENT ON COLUMN CONTATO.CON_EMAIL IS 'Endereço de e-mail.';

CREATE TABLE CREDENCIAIS (
    CRE_COD INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CRE_LOGIN VARCHAR(50) NOT NULL UNIQUE, 
    CRE_SENHA VARCHAR(255) NOT NULL        
);
COMMENT ON TABLE CREDENCIAIS IS 'Tabela para armazenar as credenciais de login dos voluntários.';
COMMENT ON COLUMN CREDENCIAIS.CRE_COD IS 'Chave primária auto-incrementável para as credenciais.';
COMMENT ON COLUMN CREDENCIAIS.CRE_LOGIN IS 'Login do usuário (deve ser único).';
COMMENT ON COLUMN CREDENCIAIS.CRE_SENHA IS 'Senha do usuário (DEVE SER ARMAZENADA COMO HASH).';

CREATE TABLE ENDERECO (
    EN_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EN_CEP VARCHAR(20),
    EN_RUA VARCHAR(100) NOT NULL,
    EN_NUMERO INTEGER,
    EN_BAIRRO VARCHAR(100) NOT NULL,
    EN_CIDADE VARCHAR(100) NOT NULL,
    EN_UF VARCHAR(2) NOT NULL,
    EN_COMPLEMENTO VARCHAR(100)
);
COMMENT ON TABLE ENDERECO IS 'Tabela para armazenar endereços.';
COMMENT ON COLUMN ENDERECO.EN_ID IS 'Chave primária auto-incrementável para o endereço.';

CREATE TABLE PRODUTOS (
    P_COD INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    P_TIPO VARCHAR(50) NOT NULL,
    P_UNIDADE_MEDIDA VARCHAR(20) NOT NULL,
    P_DATA_VALIDADE DATE,
    P_DESCRICAO VARCHAR(255) NOT NULL,
    P_QNTD_ESTOQUE INTEGER DEFAULT 0 
);
COMMENT ON TABLE PRODUTOS IS 'Tabela para armazenar produtos (ração, etc.).';
COMMENT ON COLUMN PRODUTOS.P_COD IS 'Chave primária auto-incrementável para o produto.';
COMMENT ON COLUMN PRODUTOS.P_QNTD_ESTOQUE IS 'Quantidade do produto em estoque.';

CREATE TABLE MEDICAMENTO (
    MED_COD INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MED_NOME VARCHAR(100) NOT NULL,
    MED_DOSE INTEGER NOT NULL, 
    MED_DESC VARCHAR(255),
    MED_QNTD_ESTOQUE INTEGER DEFAULT 0 
);
COMMENT ON TABLE MEDICAMENTO IS 'Tabela para armazenar medicamentos.';
COMMENT ON COLUMN MEDICAMENTO.MED_COD IS 'Chave primária auto-incrementável para o medicamento.';
COMMENT ON COLUMN MEDICAMENTO.MED_QNTD_ESTOQUE IS 'Quantidade do medicamento em estoque.';


CREATE TABLE VACINAS (
    VA_COD INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VA_NOME VARCHAR(100) NOT NULL,
    VA_DESC VARCHAR(255),
    VA_DT_APLICACAO DATE NOT NULL, 
    VA_DOSE VARCHAR(20) NOT NULL   
);
COMMENT ON TABLE VACINAS IS 'Tabela para armazenar os tipos de vacinas disponíveis.';
COMMENT ON COLUMN VACINAS.VA_COD IS 'Chave primária auto-incrementável para o tipo de vacina.';
COMMENT ON COLUMN VACINAS.VA_DT_APLICACAO IS 'Data de referência do lote/fabricação do tipo de vacina.';
COMMENT ON COLUMN VACINAS.VA_DOSE IS 'Tipo ou dose padrão do tipo de vacina (ex: 0.5ml, 1 unidade).';

CREATE TABLE ANIMAIS (
    AN_COD INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    AN_NOME VARCHAR(100) NOT NULL,
    AN_IDADE INTEGER NOT NULL,
    AN_TIPO VARCHAR(50),
    AN_SEXO VARCHAR(50) NOT NULL,
    AN_PORTE VARCHAR(50), 
    AN_RACA VARCHAR(100) NOT NULL,
    AN_PELAGEM VARCHAR(100) NOT NULL,
    AN_PESO INTEGER, 
    AN_BAIA VARCHAR(50) NOT NULL, 
    AN_DT_RESGATE DATE, 
    AN_DISP_ADOCAO BOOLEAN NOT NULL DEFAULT TRUE,
    AN_FOTO BYTEA,      
    AN_CASTRADO BOOLEAN DEFAULT FALSE, 
    AN_OBS VARCHAR(500), 
    AN_ATIVO BOOLEAN DEFAULT TRUE 
);
COMMENT ON TABLE ANIMAIS IS 'Tabela para armazenar informações dos animais.';
COMMENT ON COLUMN ANIMAIS.AN_COD IS 'Chave primária auto-incrementável para o animal.';
COMMENT ON COLUMN ANIMAIS.AN_PORTE IS 'Porte do animal (Pequeno, Médio, Grande).';
COMMENT ON COLUMN ANIMAIS.AN_PESO IS 'Peso do animal em uma unidade consistente (ex: gramas ou kg).';
COMMENT ON COLUMN ANIMAIS.AN_BAIA IS 'Identificação da baia ou local do animal.';
COMMENT ON COLUMN ANIMAIS.AN_DT_RESGATE IS 'Data em que o animal foi resgatado.';
COMMENT ON COLUMN ANIMAIS.AN_FOTO IS 'Foto do animal armazenada como array de bytes.';
COMMENT ON COLUMN ANIMAIS.AN_CASTRADO IS 'Indica se o animal é castrado.';
COMMENT ON COLUMN ANIMAIS.AN_OBS IS 'Observações gerais sobre o animal.';
COMMENT ON COLUMN ANIMAIS.AN_ATIVO IS 'Indica se o registro do animal está ativo no sistema.';


CREATE TABLE PESSOA (
    PE_COD INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PE_CPF VARCHAR(14) NOT NULL UNIQUE, 
    PE_NOME VARCHAR(100) NOT NULL, 
    PE_STATUS BOOLEAN DEFAULT TRUE,
    PE_PROFISSAO VARCHAR(100),
    PE_RG VARCHAR(20), 
    CON_COD INTEGER REFERENCES CONTATO(CON_COD), 
    EN_ID INTEGER REFERENCES ENDERECO(EN_ID)     
);
COMMENT ON TABLE PESSOA IS 'Tabela para armazenar dados de pessoas (adotantes, doadores).';
COMMENT ON COLUMN PESSOA.PE_COD IS 'Chave primária auto-incrementável para a pessoa.';

CREATE TABLE VOLUNTARIO (
    VOL_COD INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    VOL_CPF VARCHAR(14) UNIQUE, 
    VOL_NOME VARCHAR(100),
    CAR_COD INTEGER NOT NULL REFERENCES CARGO(CAR_COD),
    CON_COD INTEGER NOT NULL REFERENCES CONTATO(CON_COD),
    CRE_COD INTEGER NOT NULL REFERENCES CREDENCIAIS(CRE_COD)
);
COMMENT ON TABLE VOLUNTARIO IS 'Tabela para armazenar dados dos voluntários.';
COMMENT ON COLUMN VOLUNTARIO.VOL_COD IS 'Chave primária auto-incrementável para o voluntário.';

CREATE TABLE ADOCAO (
    ADO_COD INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ADO_DT DATE NOT NULL,
    ADO_CONTRATO BYTEA, 
    PE_COD INTEGER NOT NULL REFERENCES PESSOA(PE_COD),
    AN_COD INTEGER NOT NULL REFERENCES ANIMAIS(AN_COD)
);
COMMENT ON TABLE ADOCAO IS 'Tabela para registrar as adoções de animais.';
COMMENT ON COLUMN ADOCAO.ADO_COD IS 'Chave primária auto-incrementável para o registro de adoção.';

CREATE TABLE ANIMAL_X_MED (
    ANIMAIS_AN_COD INTEGER NOT NULL REFERENCES ANIMAIS(AN_COD),
    MEDICAMENTO_MED_COD INTEGER NOT NULL REFERENCES MEDICAMENTO(MED_COD),
    MED_DOSE_APLICADA VARCHAR(50), 
    AXM_DATA_APLICACAO DATE DEFAULT CURRENT_DATE, 
    AXM_OBSERVACAO VARCHAR(255),
    PRIMARY KEY (ANIMAIS_AN_COD, MEDICAMENTO_MED_COD, AXM_DATA_APLICACAO) 
);
COMMENT ON TABLE ANIMAL_X_MED IS 'Tabela de associação entre animais e medicamentos aplicados.';
COMMENT ON COLUMN ANIMAL_X_MED.MED_DOSE_APLICADA IS 'Dose do medicamento que foi aplicada ao animal.';
COMMENT ON COLUMN ANIMAL_X_MED.AXM_DATA_APLICACAO IS 'Data em que o medicamento foi aplicado.';

-- Tabela ANIMAL_X_VAC ATUALIZADA --
CREATE TABLE ANIMAL_X_VAC (
    AXV_COD INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    ANIMAIS_AN_COD INTEGER NOT NULL REFERENCES ANIMAIS(AN_COD),
    VACINAS_VA_COD INTEGER NOT NULL REFERENCES VACINAS(VA_COD),
    AXV_VOL_APLICADOR_COD INTEGER NOT NULL REFERENCES VOLUNTARIO(VOL_COD), 
    AXV_DATA_APLICACAO DATE NOT NULL, 
    AXV_DOSE_NUMERICA NUMERIC(5,2), 
    AXV_OBSERVACAO TEXT -- ALTERADO DE VARCHAR(255) PARA TEXT
);
COMMENT ON TABLE ANIMAL_X_VAC IS 'Tabela para registrar as aplicações de vacinas nos animais.';
COMMENT ON COLUMN ANIMAL_X_VAC.AXV_COD IS 'Chave primária auto-incrementável para o registro da aplicação da vacina.';
COMMENT ON COLUMN ANIMAL_X_VAC.AXV_VOL_APLICADOR_COD IS 'ID do voluntário que aplicou a vacina.';
COMMENT ON COLUMN ANIMAL_X_VAC.AXV_DATA_APLICACAO IS 'Data em que a vacina foi aplicada ao animal.';
COMMENT ON COLUMN ANIMAL_X_VAC.AXV_DOSE_NUMERICA IS 'Dose numérica da vacina aplicada, se aplicável.';
COMMENT ON COLUMN ANIMAL_X_VAC.AXV_OBSERVACAO IS 'Observações sobre a aplicação da vacina (permite textos longos).';


CREATE TABLE DOACOES (
    DOA_COD INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DOA_TIPO VARCHAR(50) NOT NULL, 
    DOA_QTDE NUMERIC(10,2), 
    DOA_DATA DATE DEFAULT CURRENT_DATE, 
    PE_COD INTEGER NOT NULL REFERENCES PESSOA(PE_COD) 
);
COMMENT ON TABLE DOACOES IS 'Tabela para registrar as doações recebidas.';
COMMENT ON COLUMN DOACOES.DOA_COD IS 'Chave primária auto-incrementável para a doação.';
COMMENT ON COLUMN DOACOES.DOA_QTDE IS 'Quantidade doada. Se for dinheiro, pode ser o valor.';

CREATE TABLE DOACAO_X_PRODUTOS (
    DOACOES_DOA_COD INTEGER NOT NULL REFERENCES DOACOES(DOA_COD),
    PRODUTOS_P_COD INTEGER NOT NULL REFERENCES PRODUTOS(P_COD),
    DXP_QUANTIDADE_PRODUTO INTEGER, 
    PRIMARY KEY (DOACOES_DOA_COD, PRODUTOS_P_COD)
);
COMMENT ON TABLE DOACAO_X_PRODUTOS IS 'Tabela de associação para doações de múltiplos produtos.';
COMMENT ON COLUMN DOACAO_X_PRODUTOS.DXP_QUANTIDADE_PRODUTO IS 'Quantidade do produto específico dentro de uma doação maior.';

CREATE TABLE VOLUNTARIO_X_DOACAO (
    VOLUNTARIO_VOL_COD INTEGER NOT NULL REFERENCES VOLUNTARIO(VOL_COD),
    DOACOES_DOA_COD INTEGER NOT NULL REFERENCES DOACOES(DOA_COD),
    PRIMARY KEY (VOLUNTARIO_VOL_COD, DOACOES_DOA_COD)
);
COMMENT ON TABLE VOLUNTARIO_X_DOACAO IS 'Tabela de associação para registrar qual voluntário intermediou ou recebeu uma doação.';

CREATE INDEX IDX_PESSOA_CPF ON PESSOA(PE_CPF);
CREATE INDEX IDX_ANIMAIS_NOME ON ANIMAIS(AN_NOME);
CREATE INDEX IDX_VOLUNTARIO_CPF ON VOLUNTARIO(VOL_CPF);

-- Inserir dados fictícios na tabela ANIMAIS
INSERT INTO ANIMAIS (AN_NOME, AN_IDADE, AN_TIPO, AN_SEXO, AN_PORTE, AN_RACA, AN_PELAGEM, AN_PESO, AN_BAIA, AN_DT_RESGATE, AN_DISP_ADOCAO, AN_FOTO, AN_CASTRADO, AN_OBS, AN_ATIVO) VALUES
('Rex', 5, 'Cachorro', 'Macho', 'Médio', 'Labrador', 'Curta e Dourada', 25000, 'C-01', '2023-01-15', true, NULL, true, 'Amigável e brincalhão', true),
('Mia', 2, 'Gato', 'Fêmea', 'Pequeno', 'Siamês', 'Curta e Creme', 4000, 'G-05', '2024-03-10', true, NULL, true, 'Muito carinhosa e calma', true),
('Bolinha', 8, 'Cachorro', 'Macho', 'Pequeno', 'Poodle', 'Cacheada e Branca', 7000, 'C-02', '2022-07-20', true, NULL, false, 'Precisa de cuidados com a pelagem, um pouco medroso', true),
('Pantera', 3, 'Gato', 'Fêmea', 'Médio', 'SRD (Sem Raça Definida)', 'Curta e Preta', 5000, 'G-02', '2024-02-01', false, NULL, true, 'Em tratamento veterinário', true),
('Maximus', 4, 'Cachorro', 'Macho', 'Grande', 'Pastor Alemão', 'Média e Preto/Castanho', 30000, 'C-03', '2023-09-05', true, NULL, true, 'Adora correr e precisa de espaço', true);

SELECT 'Schema SoftPet recriado com sucesso com AXV_OBSERVACAO como TEXT e dados de exemplo inseridos!' AS status;